I have written a program that uses brute force to find all possible solutions.
it completes the tasks in these times
board size, number of solutions found, time (ms),
4, 2, 15
5, 10, 22
6, 4, 22
7, 40, 27
8, 92, 50
9, 352, 124
10, 724, 491
11, 2680, 2753
12, 14200, 17966
so on

the way it works:
when you place a queen, the program calculates which fields will be threatened.
there it flips a boolean, and from there on the field wont be considered.
when a dead end is met, it takes back the last queen, restores fields, and continues with the next possible position.
dead end is defined as: the program cant place a queen on the next column, or a solution was discovered. Such as:
. = free field
q = queen
| = threatened field
(it has fancy generated console text)

-
 | | q | | | 
 q | | | | | 
 | | | | | . 
 | | | | . | 
 | q | | | | 
 | | | q | | 
-
-
 | | q | | | 
 q | | | | | 
 | | | | | | 
 | | | | q | 
 | q | | | | 
 | | | q | | 
-
-
 | | | . | | 
 q | | | | | 
 | | q | | | 
 | | | | . . 
 | q | | | | 
 | | | . | | 
-